# -*- python -*-
# ex: set syntax=python:

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .


# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}


####### PROJECT IDENTITY
c['projectName'] = "Mozilla Messaging Buildbot"
c['slavePortnum'] = 9990

####### CONFIGURATION

HGURL = 'http://hg.mozilla.org/'
ADD_POLL_BRANCH = 'mozilla-central'

####### BUILDSLAVES

# the 'bots' list defines the set of allowable buildslaves. Each element is a
# tuple of bot-name and bot-password. These correspond to values given to the
# buildslave's mktap invocation.
c['bots'] = [
	     ("momo-vm-02", "bu1ld3r"),
	     ("momo-vm-03", "bu1ld3r"),
	     ("momo-vm-04", "bu1ld3r"),
	     ("momo-vm-05", "bu1ld3r"),
	     ("momo-vm-06", "bu1ld3r"),
             ("tb-linux-tbox", "bu1ld3r"),
             ("bm-xserve07", "bu1ld3r"),
             ("tbnewref-win32-tbox", "bu1ld3r"),
]

####### STATUS PLUGINS

from buildbot.status import html

c['status'] = []
c['status'].append(html.WebStatus(http_port=8810, allowForce=True, )) 

from buildbot.status import words, tinderbox
#c['status'].append(words.IRC('irc.mozilla.org', 'thunderbot', ['maildev'], ['default'], ))

c['status'].append(words.IRC(
  host = 'irc.mozilla.org', 
  nick = 'thunderbot',
  channels = ['maildev'],
  categories = ['unittest'],
))

c['status'].append(tinderbox.TinderboxMailNotifier(
                       fromaddr="gozer@mozillamessaging.com",
                       tree="Thunderbird",
                       categories=["unittest"],
                       extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org"],
                       relayhost="10.200.80.5",
                       logCompression="bzip2",
		       errorparser="unittest",
		       ))
####### SOURCES

c['sources'] = []

from buildbot.changes import bonsaipoller

import buildbotcustom.changes.hgpoller
reload(buildbotcustom.changes.hgpoller)
from buildbotcustom.changes.hgpoller import HgPoller


c['sources'].append(HgPoller(
    hgURL=HGURL,
    branch="comm-central",
    pushlogUrlOverride='%s/%s/index.cgi/pushlog' % (HGURL, ADD_POLL_BRANCH),
    pollInterval=1*60
))

c['sources'].append(HgPoller(
    hgURL=HGURL,
    branch="comm-central",
    pushlogUrlOverride='%s/%s/index.cgi/pushlog' % (HGURL, "comm-central"),
    pollInterval=1*60
))



####### SCHEDULERS

c['schedulers'] = []

from buildbot.scheduler import Scheduler, Periodic

c['schedulers'].append(Scheduler(name="Hg build scheduler",
				 builderNames=["Linux comm-central check","MacOSX 10.4 comm-central check","Win2k3 comm-central check"],
                                 branch="comm-central", 
                                 treeStableTimer=5*60))

c['schedulers'].append(Periodic(name="3 hour build scheduler",
				builderNames=["Linux comm-central check", "MacOSX 10.4 comm-central check", "Win2k3 comm-central check"],
                                periodicBuildTimer=3*60*60))



####### BUILDERS

c['builders'] = []

import mozbuild
reload(mozbuild)
from mozbuild import *
from buildbot.process import factory
from buildbot import locks
from buildbot.steps.shell import Compile,TreeSize,WithProperties
from buildbot.steps.source import Mercurial
from buildbotcustom.unittest.steps import *
from buildbotcustom.steps.test import Codesighs
from buildbotcustom.steps.misc import SetMozillaBuildProperties, GetHgRevision



s = factory.s

unix_clobber_lock = locks.MasterLock("unix_clobber_lock");
win32_clobber_lock = locks.MasterLock("win32_clobber_lock");
osx_clobber_lock = locks.MasterLock("osx_clobber_lock");

## unix builder
from buildbot.steps.transfer import FileDownload

changesetLink = '<a href=%s/%s/index.cgi/rev' % (HGURL, "comm-central")
changesetLink += '/%(got_revision)s title="Built from revision %(got_revision)s">rev:%(got_revision)s</a>'

mcchangesetLink = '<a href=%s/%s/index.cgi/rev' % (HGURL, "mozilla-central")
mcchangesetLink += '/%(hg_revision)s title="Built from Mozilla revision %(hg_revision)s">m-c:%(hg_revision)s</a>'

trunk_unix_steps = [
    s(ShellCommand, name="rpm -qa",
        command=["rpm" , "-qa"],
    ),
    s(Mercurial,
        mode='update',
        baseURL=HGURL,
        defaultBranch="comm-central",
        alwaysUseLatest=True,
        timeout=60*60, #hg clone can take a long time
     ),
    s(ShellCommand,
        command=['echo', 'TinderboxPrint:', WithProperties(changesetLink)],
    ),
    s(ShellCommand,
        command=['python', 'client.py', '--skip-comm', '--skip-chatzilla', '--skip-venkman', '--skip-calendar', 'checkout'],
        description=['running', 'client.py', 'checkout'],
        descriptionDone=['client.py', 'checkout'],
        haltOnFailure=True,
        timeout=60*60, #hg clone can take a long time
    ),
    s(GetHgRevision,
        workdir='build/mozilla',
    ),
    s(ShellCommand,
        command=['echo', 'TinderboxPrint:', WithProperties(mcchangesetLink)],
    ),
    s(FileDownload, mastersrc="mozconfig-common",
        slavedest=".mozconfig-common",
    ),
    s(ShellCommand, name="mozconfig-common contents",
        command=["cat",".mozconfig-common"],
    ),
    s(FileDownload, mastersrc="mozconfig-linux",
        slavedest=".mozconfig",
    ),
    s(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
    ),
    s(Compile, 
      command=["make", "-f", "client.mk", "build",]),
    s(MozillaCheck,
      warnOnWarnings=True,
      timeout=60*30,
      workdir="build/objdir-tb",
    ),
]

trunk_unix_builder = {
    'name': "Linux comm-central check",
    'slavenames': ['momo-vm-02'],
    'locks': [unix_clobber_lock],
    'builddir': "trunk-unix",
    'factory': factory.BuildFactory(trunk_unix_steps),
    'category': "unittest",
}
c['builders'].append(trunk_unix_builder)

trunk_unix_clobber_steps = [
      s(TreeSize,
        workdir="../trunk-unix/build/objdir-tb",
       ),
      s(ShellCommand, name="clobber",
        workdir="../trunk-unix/build",
        command=["rm", "-rf", "objdir-tb"],
      ),
]
trunk_unix_clobber = {
    'name': "Linux comm-central check clobber",
    'slavenames': ['momo-vm-02'],
    'builddir': "trunk-unix-clobber",
    'factory': factory.BuildFactory(trunk_unix_clobber_steps),
    'locks': [unix_clobber_lock],
    'category': "clobber",
}
c['builders'].append(trunk_unix_clobber)

## osx builder
trunk_osx_steps = [
    s(ShellCommand, name="sw_vers",
        command=["sw_vers"],
    ),
    s(Mercurial,
        mode='update',
        baseURL=HGURL,
        defaultBranch="comm-central",
        alwaysUseLatest=True,
        timeout=60*60, #hg clone can take a long time
     ),
    s(ShellCommand,
        command=['echo', 'TinderboxPrint:', WithProperties(changesetLink)],
    ),
    s(ShellCommand,
        command=['python2.4', 'client.py', '--skip-comm', '--skip-chatzilla', '--skip-venkman', '--skip-calendar', 'checkout'],
        description=['running', 'client.py', 'checkout'],
        descriptionDone=['client.py', 'checkout'],
        haltOnFailure=True,
        timeout=60*60, #hg clone can take a long time
    ),
    s(GetHgRevision,
        workdir='build/mozilla',
    ),
    s(ShellCommand,
        command=['echo', 'TinderboxPrint:', WithProperties(mcchangesetLink)],
    ),
    s(FileDownload, mastersrc="mozconfig-common",
        slavedest=".mozconfig-common",
    ),
    s(ShellCommand, name="mozconfig-common contents",
        command=["cat",".mozconfig-common"],
    ),
    s(FileDownload, mastersrc="mozconfig-osx",
        slavedest=".mozconfig",
    ),
    s(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
    ),
    s(Compile,
      command=["make", "-f", "client.mk", "build",]),
    s(MozillaCheck,
      warnOnWarnings=True,
      timeout=60*30,
      workdir="build/objdir-tb",
    ),
]

trunk_osx_builder = {
    'name': "MacOSX 10.4 comm-central check",
    'slavenames': ['momo-vm-05'],
    'builddir': "trunk-osx",
    'locks': [osx_clobber_lock],
    'factory': factory.BuildFactory(trunk_osx_steps),
    'category': "unittest",
}
c['builders'].append(trunk_osx_builder)

trunk_osx_clobber_steps = [
      s(TreeSize,
        workdir="../trunk-osx/build/objdir-tb",
       ),
      s(ShellCommand, name="clobber",
        workdir="../trunk-osx/build",
        command=["rm", "-rf", "objdir-tb"],
      ),
]
trunk_osx_clobber = {
    'name': "MacOSX 10.4 comm-central check clobber",
    'slavenames': ['momo-vm-05'],
    'builddir': "trunk-osx-clobber",
    'factory': factory.BuildFactory(trunk_osx_clobber_steps),
    'locks': [osx_clobber_lock],
    'category': "clobber",
}
c['builders'].append(trunk_osx_clobber)

## win32 builder

trunk_win32_steps = [
    s(Mercurial,
        mode='update',
        baseURL=HGURL,
        defaultBranch="comm-central",
        alwaysUseLatest=True,
        timeout=60*60, #hg clone can take a long time
     ),
    s(ShellCommand,
        command=['echo', 'TinderboxPrint:', WithProperties(changesetLink)],
    ),
    s(ShellCommand,
        command=['python', 'client.py', '--skip-comm', '--skip-chatzilla', '--skip-venkman', '--skip-calendar', 'checkout'],
        description=['running', 'client.py', 'checkout'],
        descriptionDone=['client.py', 'checkout'],
        haltOnFailure=True,
        timeout=60*60, #hg clone can take a long time
    ),
    s(GetHgRevision,
        workdir='build/mozilla',
    ),
    s(ShellCommand,
        command=['echo', 'TinderboxPrint:', WithProperties(mcchangesetLink)],
    ),
    s(FileDownload, mastersrc="mozconfig-common",
        slavedest=".mozconfig-common",
    ),
    s(ShellCommand, name="mozconfig-common contents",
        command=["cat",".mozconfig-common"],
    ),
    s(FileDownload, mastersrc="mozconfig-win",
        slavedest=".mozconfig",
    ),
    s(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
    ),
    s(Compile,
      command=["make", "-f", "client.mk", "build",]),
    s(MozillaCheck,
      warnOnWarnings=True,
      timeout=60*30,
      workdir="build/objdir-tb",
    ),
]

trunk_win32_builder = {
    'name': "Win2k3 comm-central check",
    'slavenames': ['momo-vm-04'],
    'builddir': "trunk-win32",
    'locks': [win32_clobber_lock],
    'factory': factory.BuildFactory(trunk_win32_steps),
    'category': "unittest"
}
c['builders'].append(trunk_win32_builder)

trunk_win32_clobber_steps = [
      s(TreeSize,
        workdir="../trunk-win32/build/objdir-tb",
       ),
      s(ShellCommand, name="clobber",
        workdir="../trunk-win32/build",
        command=["rm", "-rf", "objdir-tb"],
      ),
]
trunk_win32_clobber = {
    'name': "Win2k3 comm-central check clobber",
    'slavenames': ['momo-vm-04'],
    'builddir': "trunk-win32-clobber",
    'factory': factory.BuildFactory(trunk_win32_clobber_steps),
    'locks': [win32_clobber_lock],
    'category': "clobber",
}
c['builders'].append(trunk_win32_clobber)

## END OF DEFAULT MASTER.CFG
