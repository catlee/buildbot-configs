# mozconfig.common only exists in mozilla-central
if test -e "$topsrcdir/mozilla/build/macosx/universal/mozconfig.common" && test -e "$topsrcdir/build/macosx/universal/mozconfig.common"; then

  # Treat this as a 1.9.2 mozconfig.
  if test -e "$topsrcdir/mozilla/build/macosx/universal/mozconfig"; then
    . $topsrcdir/mozilla/build/macosx/universal/mozconfig
  else
    . $topsrcdir/build/macosx/universal/mozconfig
  fi

  # 1.9.2 specific options.
  ac_add_options --enable-static
  ac_add_options --disable-shared

else

  # Now in comm-central land.
  if test -e "$topsrcdir/mozilla/build/macosx/universal/mozconfig.common"; then
    # We need some hackery to deal with the mozilla/ build system calling this
    # mozconfig.
    oldtopsrcdir=$topsrcdir
    export topsrcdir=$topsrcdir/mozilla
  fi

  mk_add_options MOZ_BUILD_PROJECTS="ppc i386"
  . $topsrcdir/build/macosx/universal/mozconfig.common
  export MOZ_PKG_VERSION=mac

  if test -n $oldtopsrcdir; then
    export topsrcdir=$oldtopsrcdir
  fi

  # No specific options needed here.
fi

ac_add_options --enable-application=mail
ac_add_options --enable-update-channel=nightly
ac_add_options --enable-update-packaging
ac_add_options --enable-optimize
ac_add_options --disable-debug
ac_add_options --enable-tests
ac_add_options --enable-codesighs
ac_add_options --disable-install-strip

export CFLAGS="-gdwarf-2"
export CXXFLAGS="-gdwarf-2"

# Needed to enable breakpad in application.ini
export MOZILLA_OFFICIAL=1

# XXX: Can't do that when building universal, it uses CC="gcc -arch ppc" internally
# XXX: and doing this would stomp on it
#CC=gcc
#CXX=g++

# For NSS symbols
export MOZ_DEBUG_SYMBOLS=1
ac_add_options --enable-debug-symbols="-gdwarf-2"

if [ -f $topsrcdir/mozconfig-extra ] ; then
  . $topsrcdir/mozconfig-extra
fi
if [ -f $topsrcdir/mozconfig-extra-macosx ] ; then
  . $topsrcdir/mozconfig-extra-macosx
fi

#Use ccache
ac_add_options --with-ccache=/opt/local/bin/ccache
# Enable parallel compiling
mk_add_options MOZ_MAKE_FLAGS="-j8"
