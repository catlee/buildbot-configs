Overview:
  This directory contains all the necessary files to start a self-contained
  Buildbot master capable of running any type of Talos test. It contains one
  Builder for every platform listed in config.py. Tests can be triggered through
  "buildbot sendchange", and by setting the appropriate properties, any Talos
  test may be run. Below, the required and optional properties are described
  and examples are provided.

Required Properties:
  supportUrlBase: Where to look for various support tools required to run a
                  Talos job, including but not limited to: installdmg.sh,
                  count_and_reboot.py, talos.zip, pageloader.xpi, as well as
                  any pagesets, plugins, or talos addons provided. (See
                  'Option Properties' for descriptions of those three things.)
                  If you're not using custom versions of any of these tools,
                  http://talos-bundles.pvt.build.mozilla.org is a good value for this.

  configurationOptions: A comma seperated list of arguments to pass to
                        PerfConfigurator.py. You must pass at least
                        --activeTests and one test to run. Other common
                        options include: --mozAfterPaint, --noShutdown,
                        --sampleConfig. See PerfConfigurator.py for a full
                        list of options.

Optional Properties:
  plugin: A plugin to download and install into Firefox. Must be a filename,
          and possibly path, relative to supportBaseUrl. Typically this is
          used for Flash. The plugin will be extracted into talos/base_profile.

  pageset1, pageset2: Pagesets to download and install into Talos. Must be a
                      filename, and possibly path, relative to supportBaseUrl.
                      Each supplied pageset will be extracted into
                      talos/page_load_test.

  talosAddon1, talosAddon2: Addons to the Talos framework itself. Must be a
                            filename, and possibly path, relative to
                            supportBaseUrl. Each supplied addon will be
                            extracted into talos/.

  extraTalosArg: An extra argument to pass to run_tests.py. --amo (used for
                 addon testing), is the only known one.

  addonUrl: A Firefox addon to download and install before running tests. The
            addon will be downloaded to talos/ and the Talos framework will
            install it into the profile.

Examples:
- To run an add-on test (after flipping releaseTester=True in master.cfg) on Windows 7:
    buildbot sendchange -m localhost:9118 -u bhearsum -p 'configurationOptions:--activeTests,ts,--noShutdown,--sampleConfig,addon.config' -p 'supportUrlBase:http://talos-bundles.pvt.build.mozilla.org' --branch=win7 -p 'addonUrl:/pub/mozilla.org/addons/722/noscript-2.1.5-fn+sm+fx.xpi' -p'extraTalosArg:--amo' https://ftp-ssl.mozilla.org/pub/mozilla.org/firefox/nightly/latest-mozilla-central/firefox-10.0a1.en-US.win32.installer.exe

- To run Tp5 on Snow Leopard:
    buildbot sendchange -m localhost:9118 -u bhearsum -p 'configurationOptions:--activeTests,tp5,--mozAfterPaint' -p 'supportUrlBase:http://talos-bundles.pvt.build.mozilla.org' --branch=snowleopard -p 'pageset1:zips/tp5.zip' http://stage.mozilla.org/pub/mozilla.org/firefox/releases/7.0.1/mac/en-US/Firefox%207.0.1.dmg

- To run Ts on Snow Leopard:
    buildbot sendchange -m localhost:9118 -u bhearsum -p 'configurationOptions:--activeTests,ts_places_generated_min:ts_places_generated_med:ts_places_generated_max' -p 'supportUrlBase:http://talos-bundles.pvt.build.mozilla.org' --branch=snowleopard -p 'talosAddon1:profiles/dirtyDBs.zip' -p 'talosAddon2:profiles/dirtyMaxDBs.zip' http://stage.mozilla.org/pub/mozilla.org/firefox/releases/7.0.1/mac/en-US/Firefox%207.0.1.dmg
