# -*- python -*-

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

from buildbot.process.properties import WithProperties
from buildbot.status.mail import MailNotifier
from buildbot.status.tinderbox import TinderboxMailNotifier

import buildbotcustom.changes.hgpoller
import buildbotcustom.process.tryserverfactory
import buildbotcustom.scheduler
import buildbotcustom.env
import buildbotcustom.status.generators
import buildbotcustom.status.mail
reload(buildbotcustom.changes.hgpoller)
reload(buildbotcustom.process.tryserverfactory)
reload(buildbotcustom.scheduler)
reload(buildbotcustom.status.generators)
reload(buildbotcustom.status.mail)
reload(buildbotcustom.env)

from buildbotcustom.changes.hgpoller import HgPoller
from buildbotcustom.process.tryserverfactory import TryBuildFactory, \
        WinmoTryBuildFactory, MaemoTryBuildFactory
from buildbotcustom.scheduler import NoMergeScheduler
from buildbotcustom.env import MozillaEnvironments
from buildbotcustom.status.generators import buildTryCompleteMessage
from buildbotcustom.status.mail import MercurialEmailLookup

import factories
reload(factories)

import config
reload(config)
from config import *

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

##
## Misc Config
##

c['projectName'] = "Mozilla Try Server"
c['projectURL'] = "http://www.mozilla.org"
c['buildbotURL'] = "http://sm-try-master.mozilla.org:8010"
c['slavePortnum'] = 9982

##
## Slaves
##
# (bot-name, bot-password)

import BuildSlaves
reload(BuildSlaves)
c['slaves'] = BuildSlaves.SlaveList

##
## Status
##

from buildbot.status.html import WebStatus
c['status'] = []
c['status'].append(WebStatus(http_port=8010, allowForce=True))

#
## Sources
##

from buildbot.changes.pb import PBChangeSource
c['change_source'] = []
c['change_source'].append(PBChangeSource())
c['change_source'].append(HgPoller(
    hgURL='http://hg.mozilla.org',
    branch='try',
    pushlogUrlOverride='http://hg.mozilla.org/try/pushlog',
    tipsOnly=1,
    pollInterval=1*60
))

##
## Schedulers
##

c['schedulers'] = []

# scheduler for sendchange

c['schedulers'].append(NoMergeScheduler(name="Sendchange test scheduler",
                 branch="PATCH_TRY",
                 treeStableTimer=3,
                 builderNames=["Linux try cvs build",
                               "OS X 10.5.2 try cvs build",
                               "WINNT 5.2 try cvs build"]))
                               
c['schedulers'].append(NoMergeScheduler(name="Sendchange hg scheduler",
				 branch="HG_TRY",
				 treeStableTimer=3,
				 builderNames=[
				     "Linux try hg build",
                     "OS X 10.5.2 try hg build",
                     "WINNT 5.2 try hg build",
                     "WinMo try hg build",
                     "Maemo try hg build",
                     "Linux try hg unit test",
                     "OS X 10.5.2 try hg unit test",
                     "WINNT 5.2 try hg unit test"]))

c['schedulers'].append(NoMergeScheduler(name="Sendchange hg push scheduler",
				 branch="try",
				 treeStableTimer=3,
				 builderNames=[
				     "Linux try hg build",
                     "OS X 10.5.2 try hg build",
                     "WINNT 5.2 try hg build",
                     "WinMo try hg build",
                     "Maemo try hg build",
                     "Linux try hg unit test",
                     "OS X 10.5.2 try hg unit test",
                     "WINNT 5.2 try hg unit test"]))

c['status'].append(TinderboxMailNotifier(
                     fromaddr="tryserver@build.mozilla.org",
                     tree="MozillaTry",
                     extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org"],
                     relayhost="mail.build.mozilla.org",
                     builders=["Linux try cvs build",
                               "OS X 10.5.2 try cvs build",
                               "WINNT 5.2 try cvs build",
                               "Linux try hg build",
                               "OS X 10.5.2 try hg build",
                               "WINNT 5.2 try hg build",
                               "WinMo try hg build",
                               "Maemo try hg build"
                              ],
                     logCompression="bzip2"))

c['status'].append(TinderboxMailNotifier(
                     fromaddr="tryserver@build.mozilla.org",
                     tree="MozillaTry",
                     extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org"],
                     relayhost="mail.build.mozilla.org",
                     builders=["Linux try hg unit test",
                               "OS X 10.5.2 try hg unit test",
                               "WINNT 5.2 try hg unit test",
                              ],
                     logCompression="bzip2",
                     errorparser="unittest"))

c['status'].append(MailNotifier(
    fromaddr="tryserver@build.mozilla.org",
    mode="all",
    sendToInterestedUsers=True,
    lookup=MercurialEmailLookup(),
    customMesg=lambda attrs: buildTryCompleteMessage(attrs,
      '/'.join([PACKAGE_URL, PACKAGE_DIR]), TINDERBOX_TREE),
    subject="Try Server: %(result)s on %(builder)s",
    relayhost="mail.build.mozilla.org",
    extraHeaders={'In-Reply-To': WithProperties('%(identifier)s')},
    builders=["Linux try hg build",
              "OS X 10.5.2 try hg build",
              "WINNT 5.2 try hg build",
              "Maemo try hg build",
              "WinMo try hg build",
              "Linux try hg unit test",
              "OS X 10.5.2 try hg unit test",
              "WINNT 5.2 try hg unit test"]
))

# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds

builders = []

firefox_cvs_linux_builder = {
    'name': "Linux try cvs build",
    'slavenames': BuildSlaves.Linux,
    'builddir': "sendchange-linux",
    'factory': factories.try_cvs_linux_factory,
    'category': "cvs"
}
builders.append(firefox_cvs_linux_builder)

firefox_cvs_macosx_builder = {
    'name': "OS X 10.5.2 try cvs build",
    'slavenames': BuildSlaves.Mac,
    'builddir': "sendchange-mac",
    'factory': factories.try_cvs_macosx_factory,
    'category': "cvs"
}
builders.append(firefox_cvs_macosx_builder)

firefox_cvs_win32_builder = {
    'name': "WINNT 5.2 try cvs build",
    'slavenames': BuildSlaves.Win32,
    'builddir': "sendchange-win32",
    'factory': factories.try_cvs_win32_factory,
    'category': "cvs"
}
builders.append(firefox_cvs_win32_builder)

firefox_hg_linux_factory = TryBuildFactory(
    hgHost='hg.mozilla.org',
    repoPath='try',
    buildToolsRepoPath='build/tools',
    env={'MOZ_OBJDIR': OBJDIR},
    objdir=OBJDIR,
    platform='linux',
    productName=PKG_BASENAME,
    profiledBuild=False,
    stageServer='build.mozilla.org',
    stageUsername='trybld',
    stageBasePath='/builds/tryserver',
    codesighs=False,
    talosMasters=TALOS_TRY_MASTERS,
    packageUrl=PACKAGE_URL,
    packageDir=PACKAGE_DIR
)

firefox_sendchange_linux_hg_builder = {
        'name': "Linux try hg build",
        'slavenames': BuildSlaves.Linux,
        'builddir': "sendchange-linux-hg",
        'factory': firefox_hg_linux_factory,
        'category': "Sendchange",
}
builders.append(firefox_sendchange_linux_hg_builder)

firefox_hg_macosx_factory = TryBuildFactory(
    hgHost='hg.mozilla.org',
    repoPath='try',
    buildToolsRepoPath='build/tools',
    env={'MOZ_OBJDIR': OBJDIR},
    objdir='%s/ppc' % OBJDIR,
    platform='macosx',
    productName=PKG_BASENAME,
    profiledBuild=False,
    stageServer='build.mozilla.org',
    stageUsername='trybld',
    stageBasePath='/builds/tryserver',
    codesighs=False,
    talosMasters=TALOS_TRY_MASTERS,
    packageUrl=PACKAGE_URL,
    packageDir=PACKAGE_DIR
)


firefox_sendchange_macosx_hg_builder = {
        'name': "OS X 10.5.2 try hg build",
        'slavenames': BuildSlaves.Mac,
        'builddir': "sendchange-macosx-hg",
        'factory': firefox_hg_macosx_factory,
        'category': "Sendchange",
}
builders.append(firefox_sendchange_macosx_hg_builder)

firefox_hg_win32_factory = TryBuildFactory(
    hgHost='hg.mozilla.org',
    repoPath='try',
    buildToolsRepoPath='build/tools',
    env=WIN32_ENVIRONMENT,
    objdir=OBJDIR,
    platform='win32',
    productName=PKG_BASENAME,
    profiledBuild=False,
    stageServer='build.mozilla.org',
    stageUsername='trybld',
    stageBasePath='/builds/tryserver',
    codesighs=False,
    uploadSymbols=True,
    talosMasters=TALOS_TRY_MASTERS,
    packageUrl=PACKAGE_URL,
    packageDir=PACKAGE_DIR
)

firefox_sendchange_win32_hg_builder = {
        'name': "WINNT 5.2 try hg build",
        'slavenames': BuildSlaves.Win32,
        'builddir': "win32-hg",
        'factory': firefox_hg_win32_factory,
        'category': "Sendchange",
}
builders.append(firefox_sendchange_win32_hg_builder)

firefox_sendchange_linux_unittest_builder = {
    'name': "Linux try hg unit test",
    'slavenames': BuildSlaves.Linux,
    'builddir': "sendchange-linux-unittest",
    'factory': factories.firefox_hg_linux_unittest_factory,
    'category': "Sendchange"
}
builders.append(firefox_sendchange_linux_unittest_builder)

firefox_sendchange_macosx_unittest_builder = {
    'name': "OS X 10.5.2 try hg unit test",
    'slavenames': BuildSlaves.Mac,
    'builddir': "sendchange-macosx-unittest",
    'factory': factories.firefox_hg_macosx_unittest_factory,
    'category': "Sendchange"
}
builders.append(firefox_sendchange_macosx_unittest_builder)

firefox_sendchange_win32_unittest_builder = {
    'name': "WINNT 5.2 try hg unit test",
    'slavenames': BuildSlaves.Win32,
    'builddir': "win32-unit",
    'factory': factories.firefox_hg_win32_unittest_factory,
    'category': "Sendchange"
}
builders.append(firefox_sendchange_win32_unittest_builder)

fennec_hg_winmo_factory = WinmoTryBuildFactory(
    hgHost='hg.mozilla.org',
    buildToolsRepoPath='build/tools',
    repoPath='try',
    mobileRepoPath='mobile-browser',
    configRepoPath='build/buildbot-configs',
    configSubDir = 'tryserver',
    mozconfig="tryserver/winmo/mobile-browser/try",
    env=MozillaEnvironments['winmo-arm'],
    objdir=OBJDIR,
    platform='winmo-arm',
    stageServer='build.mozilla.org',
    stageUsername='trybld',
    stageBasePath='/builds/tryserver',
    scp_string=SCP_STRING,
    baseWorkDir='build'

)

fennec_sendchange_winmo_builder = {
    'name': "WinMo try hg build",
    'slavenames': BuildSlaves.Win32,
    'builddir': 'winmo-hg',
    'factory': fennec_hg_winmo_factory,
    'category': 'Sendchange'
}
builders.append(fennec_sendchange_winmo_builder)

fennec_hg_maemo_factory = MaemoTryBuildFactory(
    hgHost='hg.mozilla.org',
    buildToolsRepoPath='build/tools',
    repoPath='try',
    mobileRepoPath='mobile-browser',
    configRepoPath='build/buildbot-configs',
    configSubDir = 'tryserver',
    mozconfig="tryserver/mobile-browser/try",
    objdir=OBJDIR,
    platform='linux',
    stageServer='build.mozilla.org',
    stageUsername='trybld',
    stageBasePath='/builds/tryserver',
    scp_string=SCP_STRING,
    baseWorkDir="%s/build" % SBOX_HOME

)

fennec_sendchange_maemo_builder = {
    'name': "Maemo try hg build",
    'slavenames': BuildSlaves.Linux,
    'builddir': 'sendchange-maemo-hg',
    'factory': fennec_hg_maemo_factory,
    'category': 'Sendchange'
}
builders.append(fennec_sendchange_maemo_builder)

c['builders'] = builders
