# -*- python -*-
# ex: set syntax=python:

# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Mozilla-specific Buildbot steps.
#
# The Initial Developer of the Original Code is
# Mozilla Corporation.
# Portions created by the Initial Developer are Copyright (C) 2007
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Rob Campbell <rcampbell@mozilla.com>
#   Chris Cooper <ccooper@mozilla.com>
#   Ben Hearsum <bhearsum@mozilla.com>
# ***** END LICENSE BLOCK *****

import os.path
from buildbot.process import factory
from buildbotcustom.changes.hgpoller import HgPoller
from buildbot.scheduler import Scheduler, Nightly, Periodic
from buildbot.status import html, words, tinderbox
from buildbot.steps.source import Mercurial
from buildbot.steps.transfer import FileDownload
from buildbot.steps.shell import Compile, ShellCommand, WithProperties

from buildbotcustom.env import *
from buildbotcustom.unittest.steps import *
from buildbotcustom.steps.misc import CreateDir, TinderboxShellCommand


s = factory.s

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

c['projectName'] = "Mozilla2"
c['projectURL'] = "http://wiki.mozilla.org/Mozilla_2"
c['buildbotURL'] = "qm-moz2-unittest01.mozilla.org:2010"

####### BUILDSLAVES

# the 'bots' list defines the set of allowable buildslaves. Each element is a
# tuple of bot-name and bot-password. These correspond to values given to the
# buildslave's mktap invocation.

from buildbot.buildslave import BuildSlave

c['slaves'] = [BuildSlave("qm-centos5-moz2-01", "moz2"),
               BuildSlave("qm-centos5-03", "moz2"),
               BuildSlave("qm-moz2mini01", "moz2"),
               BuildSlave("qm-win2k3-moz2-01", "moz2"),
               BuildSlave("qm-win2k3-03", "moz2")]


# 'slavePortnum' defines the TCP port to listen on. This must match the value
# configured into the buildslaves (with their --master option)

c['slavePortnum'] = 9999

c['status'] = []
c['status'].append(html.WebStatus(http_port=2010, allowForce=True))



c['status'].append(tinderbox.TinderboxMailNotifier(
                       fromaddr="rcampbell@mozilla.com",
                       tree="Firefox",
                       extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org"],
                       relayhost="localhost",
                       logCompression="bzip2",
                       errorparser="unittest"))

####### CHANGESOURCES

# the 'change_source' list tells the buildmaster how it should find out about
# source code changes. Any class which implements IChangeSource can be added
# to this list: there are several in buildbot/changes/*.py to choose from.


c['change_source'] = []
c['change_source'].append(HgPoller(
                 hgURL = "http://hg.mozilla.org/",
                 branch = "mozilla-central",
                 pushlogUrlOverride="http://hg.mozilla.org/mozilla-central/index.cgi/pushlog",
                 pollInterval = 1 * 60))

####### SCHEDULERS

## configure the Schedulers

c['schedulers'] = []
c['schedulers'].append(Scheduler(name="mozilla-central",
                                 branch="mozilla-central",
                                 treeStableTimer=5*60,
                                 builderNames=["Linux mozilla-central qm-centos5-moz2-01 dep unit test",
                                               "Linux mozilla-central qm-centos5-03 dep unit test",
                                               "MacOSX Darwin 9.2.2 mozilla-central qm-moz2mini01 dep unit test",
                                               "WINNT 5.2 mozilla-central qm-win2k3-moz2-01 dep unit test",
                                               "WINNT 5.2 mozilla-central qm-win2k3-03 dep unit test"]))

# add a periodic builder cycling every six hours to prevent the unittesters
# from dropping off the tinderbox tree

c['schedulers'].append(Periodic(name="mozilla-central-periodic",
                                 branch="mozilla-central",
                                 periodicBuildTimer=60*60*3, # three hours
                                 builderNames=["Linux mozilla-central qm-centos5-moz2-01 dep unit test",
                                               "Linux mozilla-central qm-centos5-03 dep unit test",
                                               "MacOSX Darwin 9.2.2 mozilla-central qm-moz2mini01 dep unit test",
                                               "WINNT 5.2 mozilla-central qm-win2k3-moz2-01 dep unit test",
                                               "WINNT 5.2 mozilla-central qm-win2k3-03 dep unit test"]))

####### BUILDERS

# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds


# the first BuildStep is typically responsible for obtaining a copy of the
# change_source. There are source-obtaining Steps in buildbot/process/step.py for
# CVS, SVN, and others.

CVSROOT = ":ext:unittest@cvs.mozilla.org:/cvsroot"

builders = []

def addPrintChangesetStep(factory, env={}):
    changesetLink = '<a href=http://hg.mozilla.org/mozilla-central/index.cgi/rev/%(got_revision)s title="Built from revision %(got_revision)s">rev:%(got_revision)s</a>'
    factory.addStep(ShellCommand(
        command=['echo', 'TinderboxPrint:', WithProperties(changesetLink)],
        env=env
    ))

moz2_linux_unittest_factory = factory.BuildFactory()
moz2_linux_unittest_factory.addStep(Mercurial, mode='update',
    baseURL='http://hg.mozilla.org/',
    defaultBranch='mozilla-central')
addPrintChangesetStep(moz2_linux_unittest_factory)
moz2_linux_unittest_factory.addStep(ShellCommand, name="download mozconfig",
    command=['cvs', '-d', CVSROOT, 'co', '-d', 'mozconfigs',
             'mozilla/tools/buildbot-configs/testing/moz2unit/mozconfig-firefox-linux'],
    workdir='.')
moz2_linux_unittest_factory.addStep(ShellCommand, name="copy mozconfig",
    command=['cp', 'mozconfigs/mozconfig-firefox-linux', 'build/.mozconfig'],
    workdir='.')
moz2_linux_unittest_factory.addStep(ShellCommand, name='mozconfig contents',
    command=['cat', '.mozconfig'])
moz2_linux_unittest_factory.addStep(Compile,
    warningPattern='',
    command=['make', '-f', 'client.mk', 'build'])
moz2_linux_unittest_factory.addStep(MozillaCheck, 
    warnOnWarnings=True,
    timeout=60*40,
    workdir="build/objdir")
moz2_linux_unittest_factory.addStep(CreateProfile,
        warnOnWarnings=True,
        workdir="build",
        command = r'python testing/tools/profiles/createTestingProfile.py --clobber --binary objdir/dist/bin/firefox',
        env=MozillaEnvironments['linux-centos-unittest'],
        clobber=True)
moz2_linux_unittest_factory.addStep(MozillaUnixReftest, warnOnWarnings=True,
    workdir="build/layout/reftests",
    timeout=2400,
    env=MozillaEnvironments['linux-centos-unittest'])
moz2_linux_unittest_factory.addStep(MozillaUnixCrashtest, warnOnWarnings=True,
    workdir="build/testing/crashtest",
    env=MozillaEnvironments['linux-centos-unittest'])
moz2_linux_unittest_factory.addStep(MozillaMochitest, warnOnWarnings=True,
    workdir="build/objdir/_tests/testing/mochitest",
    timeout=2400,
    env=MozillaEnvironments['linux-centos-unittest'])
moz2_linux_unittest_factory.addStep(MozillaMochichrome, warnOnWarnings=True,
    workdir="build/objdir/_tests/testing/mochitest",
    env=MozillaEnvironments['linux-centos-unittest'])
moz2_linux_unittest_factory.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
    workdir="build/objdir/_tests/testing/mochitest",
    env=MozillaEnvironments['linux-centos-unittest'])

mozilla2_firefox_unix_test_builder = {
    'name': 'Linux mozilla-central qm-centos5-moz2-01 dep unit test',
    'slavenames': ['qm-centos5-moz2-01'],
    'builddir': 'linux',
    'factory': moz2_linux_unittest_factory,
    'category': 'HEAD',
}

mozilla2_firefox_unix_test_builder2 = {
    'name': 'Linux mozilla-central qm-centos5-03 dep unit test',
    'slavenames': ['qm-centos5-03'],
    'builddir': 'linux-3',
    'factory': moz2_linux_unittest_factory,
    'category': 'HEAD',
}

builders.append(mozilla2_firefox_unix_test_builder)
builders.append(mozilla2_firefox_unix_test_builder2)

moz2_darwin_unittest_factory = factory.BuildFactory()
moz2_darwin_unittest_factory.addStep(Mercurial, mode='update',
    baseURL='http://hg.mozilla.org/',
    defaultBranch='mozilla-central')
addPrintChangesetStep(moz2_darwin_unittest_factory)
moz2_darwin_unittest_factory.addStep(ShellCommand, name="download mozconfig",
    command=['cvs', '-d', CVSROOT, 'co', '-d', 'mozconfigs',
             'mozilla/tools/buildbot-configs/testing/moz2unit/mozconfig-firefox-darwin'],
    workdir='.')
moz2_darwin_unittest_factory.addStep(ShellCommand, name="copy mozconfig",
    command=['cp', 'mozconfigs/mozconfig-firefox-darwin', 'build/.mozconfig'],
    workdir='.')
moz2_darwin_unittest_factory.addStep(ShellCommand, name='mozconfig contents',
    command=['cat', '.mozconfig'])
moz2_darwin_unittest_factory.addStep(Compile,
    warningPattern='',
    command=['make', '-f', 'client.mk', 'build'])
moz2_darwin_unittest_factory.addStep(MozillaCheck, 
    warnOnWarnings=True,
    timeout=60*40,
    workdir="build/objdir")
moz2_darwin_unittest_factory.addStep(CreateProfile,
    warnOnWarnings=True,
    workdir="build",
    command = r'python testing/tools/profiles/createTestingProfile.py --clobber --binary objdir/dist/bin/firefox',
    env=MozillaEnvironments['mac-osx-unittest'],
    clobber=True)
moz2_darwin_unittest_factory.addStep(MozillaOSXReftest, warnOnWarnings=True,
    workdir="build/layout/reftests",
    timeout=2400,
    env=MozillaEnvironments['mac-osx-unittest'])
moz2_darwin_unittest_factory.addStep(MozillaOSXCrashtest, warnOnWarnings=True,
    workdir="build/testing/crashtest",
    env=MozillaEnvironments['mac-osx-unittest'])
moz2_darwin_unittest_factory.addStep(MozillaOSXMochitest, warnOnWarnings=True,
    workdir="build/objdir/_tests/testing/mochitest",
    timeout=2400,
    env=MozillaEnvironments['mac-osx-unittest'])
moz2_darwin_unittest_factory.addStep(MozillaOSXMochichrome, warnOnWarnings=True,
    workdir="build/objdir/_tests/testing/mochitest",
    env=MozillaEnvironments['mac-osx-unittest'])
moz2_darwin_unittest_factory.addStep(MozillaOSXBrowserChromeTest, warnOnWarnings=True,
    workdir="build/objdir/_tests/testing/mochitest",
    env=MozillaEnvironments['mac-osx-unittest'])

mozilla2_firefox_osx_test_builder = {
    'name': 'MacOSX Darwin 9.2.2 mozilla-central qm-moz2mini01 dep unit test',
    'slavenames': ['qm-moz2mini01'],
    'builddir': 'darwin',
    'factory': moz2_darwin_unittest_factory,
    'category': 'HEAD',
}

builders.append(mozilla2_firefox_osx_test_builder)

##
## Win2k3
##

moz2_win32_unittest_factory = factory.BuildFactory()

moz2_win32_unittest_factory.addStep(TinderboxShellCommand, name="kill sh",
    description='kill sh',
    descriptionDone="killed sh",
    command="pskill -t sh.exe",
    workdir="D:\\Utilities")
moz2_win32_unittest_factory.addStep(TinderboxShellCommand, name="kill make",
    description='kill make',
    descriptionDone="killed make",
    command="pskill -t make.exe",
    workdir="D:\\Utilities")
moz2_win32_unittest_factory.addStep(TinderboxShellCommand, name="kill firefox",
    description='kill firefox',
    descriptionDone="killed firefox",
    command="pskill -t firefox.exe",
    workdir="D:\\Utilities")
moz2_win32_unittest_factory.addStep(Mercurial, mode='update',
    baseURL='http://hg.mozilla.org/',
    defaultBranch='mozilla-central')
addPrintChangesetStep(moz2_win32_unittest_factory,
                      MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(ShellCommand, name="download mozconfig",
    command=['cvs', '-d', CVSROOT, 'co', '-d', 'mozconfigs',
             'mozilla/tools/buildbot-configs/testing/moz2unit/mozconfig-firefox-win2k3'],
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(ShellCommand, name="copy mozconfig",
    command=['copy', 'build\\mozconfigs\\mozconfig-firefox-win2k3', 'build\\.mozconfig'],
    workdir='.')
moz2_win32_unittest_factory.addStep(ShellCommand, name="mozconfig contents",
    command=["type", ".mozconfig"],
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(Compile, 
    command=["make", "-f", "client.mk", "build"],
    timeout=2400,
    warningPattern='', 
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(MozillaCheck, warnOnWarnings=True, 
    workdir="build\\objdir",
    timeout=60*40,
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(CreateProfileWin,
    warnOnWarnings=True,
    workdir="build",
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'],
    command = r'python testing\tools\profiles\createTestingProfile.py --clobber --binary objdir\dist\bin\firefox.exe',
    clobber=True)
moz2_win32_unittest_factory.addStep(MozillaWin32Reftest, warnOnWarnings=True,
    workdir="build\\layout\\reftests",
    timeout=2400,
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
    workdir="build\\testing\\crashtest",
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(MozillaWin32Mochitest, warnOnWarnings=True,
    workdir="build\\objdir\\_tests\\testing\\mochitest",
    timeout=2400,
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
moz2_win32_unittest_factory.addStep(MozillaWin32Mochichrome, warnOnWarnings=True,
    workdir="build\\objdir\\_tests\\testing\\mochitest",
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory.addStep(MozillaWin32BrowserChromeTest, warnOnWarnings=True,
    workdir="build\\objdir\\_tests\\testing\\mochitest",
    env=MozillaEnvironments['win32-vc8-mozbuild-unittest'])

firefox_trunk_win2k3_builder = {
    'name': "WINNT 5.2 mozilla-central qm-win2k3-moz2-01 dep unit test",
    'slavenames': ['qm-win2k3-moz2-01'],
    'builddir': "win2k3",
    'factory': moz2_win32_unittest_factory,
    'category': "HEAD",
}

builders.append(firefox_trunk_win2k3_builder)

LocalEnvironments = { }
LocalEnvironments['win32-vc8-mozbuild-unittest'] = {
    'MOZ_NO_REMOTE': '1',
    'NO_EM_RESTART': '1',
    'MOZ_AIRBAG': '1',
    'MOZ_CRASHREPORTER_NO_REPORT': '1',
    'XPCOM_DEBUG_BREAK': 'warn',
    'VCVARS': 'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\bin\\vcvars32.bat',
    'MOZ_MSVCVERSION': '8',
    'MOZILLABUILD': 'C:\\mozilla-build',
    'MOZILLABUILDDRIVE': 'C:',
    'MOZILLABUILDPATH': '\\mozilla-build\\',
    'MOZ_TOOLS': 'C:\\mozilla-build\\moztools',
    'CVS_RSH': 'ssh',
    'VSINSTALLDIR': 'C:\\Program Files\\Microsoft Visual Studio 8',
    "VCINSTALLDIR": 'C:\\Program Files\\Microsoft Visual Studio 8\\VC',
    "FrameworkDir": 'C:\\WINDOWS\\Microsoft.NET\\Framework',
    "FrameworkVersion": 'v2.0.50727',
    "FrameworkSDKDir": 'C:\\Program Files\\Microsoft Visual Studio 8\\SDK\\v2.0',
    "MSVCDir": 'C:\\Program Files\\Microsoft Visual Studio 8\\VC',
    "DevEnvDir": "C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\IDE",
    'PATH': 'C:\\mozilla-build\\msys\\local\\bin;' + \
            'C:\\mozilla-build\\wget;' + \
            'C:\\mozilla-build\\7zip;' + \
            'C:\\mozilla-build\\blat261\\full;' + \
            'C:\\mozilla-build\\svn-win32-1.4.2\\bin;' + \
            'C:\\mozilla-build\\upx203w;' + \
            'C:\\mozilla-build\\xemacs\\XEmacs-21.4.19\\i586-pc-win32;' + \
            'C:\\mozilla-build\\info-zip;' + \
            'C:\\mozilla-build\\nsis-2.22;' + \
            '.;' + \
            'C:\\mozilla-build\\msys\\bin;' + \
            'C:\\mozilla-build\\python25;' + \
            'C:\\mozilla-build\\python25\\Scripts;' + \
            'C:\\Mercurial;' + \
            'C:\\Program Files\\Microsoft SDKs\\Windows\\v6.0\\bin;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\IDE;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\BIN;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\Tools;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\Tools\\bin;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\PlatformSDK\\bin;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\SDK\\v2.0\\bin;' + \
            'C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\VCPackages;' + \
            'C:\\WINDOWS\\System32;' + \
            'C:\\WINDOWS;' + \
            'C:\\WINDOWS\\System32\\Wbem;' + \
            'C:\\mozilla-build\\moztools\\bin;' + \
            'C:\\Utilities;',
    'INCLUDE': 'C:\\Program Files\\Microsoft SDKs;' + \
            'C:\\Program Files\\Microsoft SDKs\\Windows\\v6.0\\include;' + \
            'C:\\Program Files\\Microsoft SDKs\\Windows\\v6.0\\include\\atl;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\ATLMFC\\INCLUDE;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\INCLUDE;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\PlatformSDK\\include;' + \
            'C:\\Program Files\\Microsoft Visual Studio 8\\SDK\\v2.0\\include;' + \
            '%INCLUDE%',
    "LIB": 'C:\\Program Files\\Microsoft SDKs\\Windows\\v6.0\\lib;' + \
           'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\ATLMFC\\LIB;' + \
           'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\LIB;' + \
           'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\PlatformSDK\\lib;' + \
           'C:\\Program Files\\Microsoft Visual Studio 8\\SDK\\v2.0\\lib;',
    "LIBPATH": 'C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727;' + \
               'C:\\Program Files\\Microsoft Visual Studio 8\\VC\\ATLMFC\\LIB'
}

moz2_win32_unittest_factory2 = factory.BuildFactory()

moz2_win32_unittest_factory2.addStep(TinderboxShellCommand, name="kill sh",
    description='kill sh',
    descriptionDone="killed sh",
    command="pskill -t sh.exe",
    workdir="C:\\Utilities")
moz2_win32_unittest_factory2.addStep(TinderboxShellCommand, name="kill make",
    description='kill make',
    descriptionDone="killed make",
    command="pskill -t make.exe",
    workdir="C:\\Utilities")
moz2_win32_unittest_factory2.addStep(TinderboxShellCommand, name="kill firefox",
    description='kill firefox',
    descriptionDone="killed firefox",
    command="pskill -t firefox.exe",
    workdir="C:\\Utilities")
moz2_win32_unittest_factory2.addStep(Mercurial, mode='update',
    baseURL='http://hg.mozilla.org/',
    defaultBranch='mozilla-central')
addPrintChangesetStep(moz2_win32_unittest_factory2,
                      env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(ShellCommand, name="download mozconfig",
    command=['cvs', '-d', CVSROOT, 'co', '-d', 'mozconfigs',
             'mozilla/tools/buildbot-configs/testing/moz2unit/mozconfig-firefox-win2k3'],
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(ShellCommand, name="copy mozconfig",
    command=['copy', 'build\\mozconfigs\\mozconfig-firefox-win2k3', 'build\\.mozconfig'],
    workdir='.')
moz2_win32_unittest_factory2.addStep(ShellCommand, name="mozconfig contents",
    command=["type", ".mozconfig"],
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(Compile, 
    command=["make", "-f", "client.mk", "build"],
    timeout=2400,
    warningPattern='', 
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(MozillaCheck, warnOnWarnings=True, 
    workdir="build\\objdir",
    timeout=60*40,
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(CreateProfileWin,
    warnOnWarnings=True,
    workdir="build",
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'],
    command = r'python testing\tools\profiles\createTestingProfile.py --clobber --binary objdir\dist\bin\firefox.exe',
    clobber=True)
moz2_win32_unittest_factory2.addStep(MozillaWin32Reftest, warnOnWarnings=True,
    workdir="build\\layout\\reftests",
    timeout=2400,
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
    workdir="build\\testing\\crashtest",
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(MozillaWin32Mochitest, warnOnWarnings=True,
    workdir="build\\objdir\\_tests\\testing\\mochitest",
    timeout=2400,
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
moz2_win32_unittest_factory2.addStep(MozillaWin32Mochichrome, warnOnWarnings=True,
    workdir="build\\objdir\\_tests\\testing\\mochitest",
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])
moz2_win32_unittest_factory2.addStep(MozillaWin32BrowserChromeTest, warnOnWarnings=True,
    workdir="build\\objdir\\_tests\\testing\\mochitest",
    env=LocalEnvironments['win32-vc8-mozbuild-unittest'])

firefox_trunk_win2k3_builder2 = {
    'name': "WINNT 5.2 mozilla-central qm-win2k3-03 dep unit test",
    'slavenames': ['qm-win2k3-03'],
    'builddir': "win2k3_03",
    'factory': moz2_win32_unittest_factory2,
    'category': "HEAD",
}

builders.append(firefox_trunk_win2k3_builder2)

c['builders'] = builders

####### DEBUGGING OPTIONS

# if you set 'debugPassword', then you can connect to the buildmaster with
# the diagnostic tool in contrib/debugclient.py . From this tool, you can
# manually force builds and inject changes, which may be useful for testing
# your buildmaster without actually commiting changes to your repository (or
# before you have a functioning 'change_source' set up). The debug tool uses the
# same port number as the slaves do: 'slavePortnum'.

# c['debugPassword'] = "painandsuffering"

# if you set 'manhole', you can ssh into the buildmaster and get an
# interactive python shell, which may be useful for debugging buildbot
# internals. It is probably only useful for buildbot developers. You can also
# use an authorized_keys file, or plain telnet.
#from buildbot import manhole
#c['manhole'] = manhole.PasswordManhole("tcp:9999:interface=127.0.0.1",
#                                       "admin", "password")

