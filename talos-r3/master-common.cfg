# Shorthand
c = BuildmasterConfig = {}

c['debugPassword'] = "mozilla"
c['projectName'] = "Talos"
c['projectURL'] = "http://wiki.mozilla.org/ReleaseEngineering"

# Keep 100 changes
c['changeHorizon'] = 100

# Cap the log size at 50 MB
c['logMaxSize'] = 50 * 1024 * 1024

c['status'] = []

from buildbot.status.mail import MailNotifier

c['status'].append(MailNotifier(
                       fromaddr="talos.buildbot@build.mozilla.org",
                       sendToInterestedUsers=False,
                       extraRecipients=["joduinn@mozilla.com"],
                       mode="failing",
                       builders=None, # send for all builders
                       relayhost="smtp.mozilla.org"))

# Slaves
import BuildSlaves
reload(BuildSlaves)
from BuildSlaves import SlavePasswords

from buildbot.buildslave import BuildSlave

c['slaves'] = []
for platform, names in SLAVES.items():
    c['slaves'].extend(BuildSlave(name, SlavePasswords[platform], max_builds=1) for name in names)

from buildbot.changes.pb import PBChangeSource
c['change_source'] = [PBChangeSource()]

c['schedulers'] = []
c['builders'] = []

# Give the release builders priority over other builders
def prioritizeBuilders(botmaster, builders):
    def sortkey(builder):
        if builder.builder_status.category.endswith('-release'):
            return 0, builder.getOldestRequestTime()
        else:
            return 1, builder.getOldestRequestTime()
    builders.sort(key=sortkey)
    return builders
c['prioritizeBuilders'] = prioritizeBuilders
