import config
reload(config)
from config import LINUX_VMS, WIN32_VMS, MAC_MINIS, XSERVES

import buildbotcustom.misc
reload(buildbotcustom.misc)
from buildbotcustom.misc import generateBranchObjects
from buildbotcustom.changes.hgpoller import HgAllLocalesPoller

ACTIVE_BRANCHES = []
L10N_SLAVES = {
    'linux': LINUX_VMS[:],
    'win32': WIN32_VMS[:],
    'macosx': MAC_MINIS[:] + XSERVES[:],
}

execfile("master-main.cfg")

# 'slavePortnum' defines the TCP port to listen on. This must match the value
# configured into the buildslaves (with their --master option)

c['slavePortnum'] = 9010

####### STATUS TARGETS

from buildbot.status import html

c['status'].append(html.WebStatus(
    http_port=8010, allowForce=True
))
c['buildbotURL'] = 'http://production-master02.build.mozilla.org:8010/'

for branch in ACTIVE_BRANCHES:
    branchObjects = generateBranchObjects(BRANCHES[branch], branch)
    c['builders'].extend(branchObjects['builders'])
    c['schedulers'].extend(branchObjects['schedulers'])
    c['change_source'].extend(branchObjects['change_source'])
    c['status'].extend(branchObjects['status'])

####### Release Automation

import release_master
reload(release_master)

c['builders'].extend(release_master.builders)
c['schedulers'].extend(release_master.schedulers)
c['change_source'].extend(release_master.change_source)
c['status'].extend(release_master.status)


import release_mobile_master
reload(release_mobile_master)

c['builders'].extend(release_mobile_master.builders)
c['schedulers'].extend(release_mobile_master.schedulers)
c['change_source'].extend(release_mobile_master.change_source)
c['status'].extend(release_mobile_master.status)

# Give the release builders priority over other builders
def prioritizeBuilders(botmaster, builders):
    def sortkey(builder):
        if builder.builder_status.category == 'release':
            return 0, builder.getOldestRequestTime()
        else:
            return 1, builder.getOldestRequestTime()
    builders.sort(key=sortkey)
    return builders
c['prioritizeBuilders'] = prioritizeBuilders

########## Mobile

import mobile_master
reload(mobile_master)

c['builders'].extend(mobile_master.m['builders'])
c['schedulers'].extend(mobile_master.m['schedulers'])
c['change_source'].extend(mobile_master.m['change_source'])
c['status'].extend(mobile_master.m['status'])

# We need to add an HgPoller for mozilla-central because we're running
# mobile builds off mozilla-central in this master instance, but
# running mozilla-central proper in the other.
from buildbotcustom.changes.hgpoller import HgPoller

mozillaCentralConfig = BRANCHES['mozilla-central']
c['change_source'].append(HgPoller(
    hgURL=mozillaCentralConfig['hgurl'],
    branch=mozillaCentralConfig['repo_path'],
    pushlogUrlOverride='%s/%s/pushlog' % (mozillaCentralConfig['hgurl'],
                                          mozillaCentralConfig['repo_path']),
    pollInterval=1*60
))
mozilla192Config = BRANCHES['mozilla-1.9.2']
from buildbotcustom.changes.hgpoller import HgPoller
c['change_source'].append(HgPoller(
    hgURL=mozilla192Config['hgurl'],
    branch=mozilla192Config['repo_path'],
    pushlogUrlOverride='%s/%s/pushlog' % (mozilla192Config['hgurl'],
                                          mozilla192Config['repo_path']),
    pollInterval=1*60
))
