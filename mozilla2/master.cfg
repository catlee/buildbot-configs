# -*- python -*-
# ex: set syntax=python:

# Shorthand
c = BuildmasterConfig = {}

####### BUILDSLAVES

import BuildSlaves
reload(BuildSlaves)
c['slaves'] = BuildSlaves.SlaveList

# 'slavePortnum' defines the TCP port to listen on. This must match the value
# configured into the buildslaves (with their --master option)

c['slavePortnum'] = 9010


# most of the config is in an external file
import config
reload(config)
from config import *


from buildbot.scheduler import Scheduler, Nightly, Periodic
from buildbot.status.tinderbox import TinderboxMailNotifier

import buildbotcustom.changes.hgpoller
import buildbotcustom.process.factory
reload(buildbotcustom.changes.hgpoller)
reload(buildbotcustom.process.factory)

from buildbotcustom.changes.hgpoller import HgPoller
from buildbotcustom.process.factory import MercurialBuildFactory

c['change_source'] = []
c['schedulers'] = []
c['builders'] = []
c['status'] = []

for name in sorted(BRANCHES.keys()):
    # shorthand
    branch = BRANCHES[name]
    builders = []
    nightlyBuilders = []
    allBuilders = []
    # generate a list of builders, nightly builders (names must be different)
    # for easy access
    for platform in branch['platforms'].keys():
        builders.append('%s build' % branch['platforms'][platform]['base_name'])
        # Skip the nightly builder for debug builds
        if platform.find('debug') == -1:
            nightlyBuilders.append('%s nightly' % \
                                    branch['platforms'][platform]['base_name'])
    allBuilders.extend(builders)
    allBuilders.extend(nightlyBuilders)

    # Currently, each branch goes to a different tree
    # If this changes in the future this may have to be
    # moved out of the loop
    c['status'].append(TinderboxMailNotifier(
        fromaddr="mozilla2.buildbot@build.mozilla.org",
        tree=branch['tinderbox_tree'],
        extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org"],
        relayhost="mail.build.mozilla.org",
        builders=allBuilders,
        logCompression="bzip2"
    ))

    # change sources
    c['change_source'].append(HgPoller(
        hgURL=HGURL,
        branch=name,
        pushlogUrlOverride='%s/%s/index.cgi/pushlog' % (HGURL, name),
        pollInterval=1*60
    ))

    # schedulers
    # this one gets triggered by the HG Poller
    c['schedulers'].append(Scheduler(
        name=name,
        branch=name,
        treeStableTimer=3*60,
        builderNames=builders
    ))
    c['schedulers'].append(Nightly(
        name='%s nightly' % name,
        branch=name,
        hour=[2],
        builderNames=nightlyBuilders
    ))
    c['schedulers'].append(Periodic(
        name='%s periodic' % name,
        builderNames=builders,
        branch=name,
        periodicBuildTimer=60*60*2 # 2 hours
    ))

    for platform in sorted(branch['platforms'].keys()):
        # shorthand
        pf = branch['platforms'][platform]

        leakTest = False
        codesighs = True
        uploadPackages = True
        if platform.find('-debug') > -1:
            leakTest = True
            codesighs = False
            uploadPackages = False
        if platform.find('win32') > -1:
            codesighs = False

        mozilla2_dep_factory = MercurialBuildFactory(
            env=pf['env'],
            objdir=pf['platform_objdir'],
            platform=platform,
            branch=name,
            sourceRepo=HGURL,
            configRepo=CONFIG_REPO_URL,
            configSubDir=CONFIG_SUBDIR,
            profiledBuild=pf['profiled_build'],
            stageServer=STAGE_SERVER,
            stageUsername=STAGE_USERNAME,
            stageGroup=STAGE_GROUP,
            stageSshKey=STAGE_SSH_KEY,
            stageBasePath=STAGE_BASE_PATH,
            leakTest=leakTest,
            codesighs=codesighs,
            uploadPackages=uploadPackages
        )
        mozilla2_dep_builder = {
            'name': '%s build' % pf['base_name'],
            'slavenames': pf['slaves'],
            'builddir': '%s-%s' % (name, platform),
            'factory': mozilla2_dep_factory,
            'category': name,
        }
        c['builders'].append(mozilla2_dep_builder)

        # skip nightlies for debug builds
        if platform.find('debug') > -1:
             continue

        mozilla2_nightly_factory = MercurialBuildFactory(
            env=pf['env'],
            objdir=pf['platform_objdir'],
            platform=platform,
            branch=name,
            sourceRepo=HGURL,
            configRepo=CONFIG_REPO_URL,
            configSubDir=CONFIG_SUBDIR,
            profiledBuild=pf['profiled_build'],
            stageServer=STAGE_SERVER,
            stageUsername=STAGE_USERNAME,
            stageGroup=STAGE_GROUP,
            stageSshKey=STAGE_SSH_KEY,
            stageBasePath=STAGE_BASE_PATH,
            codesighs=False,
            uploadPackages=uploadPackages,
            nightly=True,
            ausBaseUploadDir=branch['aus2_base_upload_dir'],
            updatePlatform=pf['update_platform'],
            downloadBaseURL=DOWNLOAD_BASE_URL,
            ausUser=AUS2_USER,
            ausHost=AUS2_HOST
        )

        mozilla2_nightly_builder = {
            'name': '%s nightly' % pf['base_name'],
            'slavenames': pf['slaves'],
            'builddir': '%s-%s-nightly' % (name, platform),
            'factory': mozilla2_nightly_factory,
            'category': name,
        }
        c['builders'].append(mozilla2_nightly_builder)

####### STATUS TARGETS

from buildbot.status import html

c['status'].append(html.WebStatus(
    http_port=8010, allowForce=True
))

####### PROJECT IDENTITY

# the 'projectName' string will be used to describe the project that this
# buildbot is working on. For example, it is used as the title of the
# waterfall HTML page. The 'projectURL' string will be used to provide a link
# from buildbot HTML pages to your project's home page.

c['projectName'] = "Mozilla 2"
c['projectURL'] = "http://wiki.mozilla.org/Mozilla_2"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.Waterfall page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = "http://production-master.build.mozilla.org:8010/"
